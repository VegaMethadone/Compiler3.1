digraph G {
    node [shape=box];
  "1 | start" [shape=ellipse];
  "1 | start" -> "7 | ASM_funcSignature" [label=" L "];
  "7 | ASM_funcSignature" [shape=ellipse];
  "7 | ASM_funcSignature" -> "91 | ASM_Var" [label=" L "];
  "91 | ASM_Var" [shape=ellipse];
  "91 | ASM_Var" -> "90 | ASM_Var_CALL" [label=" L "];
  "90 | ASM_Var_CALL" [shape=ellipse];
  "90 | ASM_Var_CALL" -> "6 | ASM_Var" [label=" L "];
  "6 | ASM_Var" [shape=ellipse];
  "6 | ASM_Var" -> "89 | ASM_CALL" [label=" L "];
  "89 | ASM_CALL" [shape=ellipse];
  "89 | ASM_CALL" -> "5 | end" [label=" L "];
  "5 | end" [shape=ellipse];
  "89 | ASM_CALL" -> "4 | ASM_CALL_Func\n\n"[shape=box];
  "4 | ASM_CALL_Func\n\n" [shape=box];
  "4 | ASM_CALL_Func\n\n" -> "6 | ASM_FuncName\n\nint_to_string" [label=" L "];
  "6 | ASM_FuncName\n\nint_to_string" [shape=box];
  "4 | ASM_CALL_Func\n\n" -> "7 | ASM_Arg\nIDENTIFIER\nb" [label=" R "];
  "7 | ASM_Arg\nIDENTIFIER\nb" [shape=box];
  "6 | ASM_Var" -> "8 | ASM_INIT\n\n"[shape=box];
  "8 | ASM_INIT\n\n" [shape=box];
  "8 | ASM_INIT\n\n" -> "11 | ASM_Type\n\nint" [label=" L "];
  "11 | ASM_Type\n\nint" [shape=box];
  "8 | ASM_INIT\n\n" -> "12 | ASM_Write\n\n" [label=" R "];
  "12 | ASM_Write\n\n" [shape=box];
  "12 | ASM_Write\n\n" -> "13 | ASM_Ident\n\nb" [label=" L "];
  "13 | ASM_Ident\n\nb" [shape=box];
  "12 | ASM_Write\n\n" -> "14 | ASM_PopStack\n\n" [label=" R "];
  "14 | ASM_PopStack\n\n" [shape=box];
  "90 | ASM_Var_CALL" -> "3 | ASM_CALL_Func\n\n"[shape=box];
  "3 | ASM_CALL_Func\n\n" [shape=box];
  "3 | ASM_CALL_Func\n\n" -> "9 | ASM_FuncName\n\nfactorial" [label=" L "];
  "9 | ASM_FuncName\n\nfactorial" [shape=box];
  "3 | ASM_CALL_Func\n\n" -> "10 | ASM_Arg\nIDENTIFIER\nx" [label=" R "];
  "10 | ASM_Arg\nIDENTIFIER\nx" [shape=box];
  "91 | ASM_Var" -> "2 | ASM_INIT\n\n"[shape=box];
  "2 | ASM_INIT\n\n" [shape=box];
  "2 | ASM_INIT\n\n" -> "15 | ASM_Type\n\nint" [label=" L "];
  "15 | ASM_Type\n\nint" [shape=box];
  "2 | ASM_INIT\n\n" -> "16 | ASM_Write\n\n" [label=" R "];
  "16 | ASM_Write\n\n" [shape=box];
  "16 | ASM_Write\n\n" -> "17 | ASM_Ident\n\nx" [label=" L "];
  "17 | ASM_Ident\n\nx" [shape=box];
  "16 | ASM_Write\n\n" -> "18 | ASM_Value\nINT\n3" [label=" R "];
  "18 | ASM_Value\nINT\n3" [shape=box];
  "7 | ASM_funcSignature" -> "19 | ASM_Func\n\n"[shape=box];
  "19 | ASM_Func\n\n" [shape=box];
  "19 | ASM_Func\n\n" -> "20 | ASM_FuncDef\n\n" [label=" L "];
  "20 | ASM_FuncDef\n\n" [shape=box];
  "20 | ASM_FuncDef\n\n" -> "21 | ASM_Value\n\nvoid" [label=" L "];
  "21 | ASM_Value\n\nvoid" [shape=box];
  "20 | ASM_FuncDef\n\n" -> "22 | ASM_Ident\n\nmain" [label=" R "];
  "22 | ASM_Ident\n\nmain" [shape=box];
  "8 | start" [shape=ellipse];
  "8 | start" -> "18 | ASM_funcSignature" [label=" L "];
  "18 | ASM_funcSignature" [shape=ellipse];
  "18 | ASM_funcSignature" -> "60 | ASM_If" [label=" L "];
  "60 | ASM_If" [shape=ellipse];
  "60 | ASM_If" -> "25 | ASM_Return" [label=" L "];
  "25 | ASM_Return" [shape=ellipse];
  "25 | ASM_Return" -> "16 | ASM_END_If" [label=" L "];
  "16 | ASM_END_If" [shape=ellipse];
  "16 | ASM_END_If" -> "59 | ASM_Var" [label=" L "];
  "59 | ASM_Var" [shape=ellipse];
  "59 | ASM_Var" -> "58 | ASM_Var_CALL" [label=" L "];
  "58 | ASM_Var_CALL" [shape=ellipse];
  "58 | ASM_Var_CALL" -> "15 | ASM_Var" [label=" L "];
  "15 | ASM_Var" [shape=ellipse];
  "15 | ASM_Var" -> "57 | ASM_Assignment" [label=" L "];
  "57 | ASM_Assignment" [shape=ellipse];
  "57 | ASM_Assignment" -> "56 | ASM_Return" [label=" L "];
  "56 | ASM_Return" [shape=ellipse];
  "56 | ASM_Return" -> "14 | end" [label=" L "];
  "14 | end" [shape=ellipse];
  "56 | ASM_Return" -> "28 | ASM_Return\n\n"[shape=box];
  "28 | ASM_Return\n\n" [shape=box];
  "28 | ASM_Return\n\n" -> "30 | ASM_Type_Return\n\nreturn" [label=" L "];
  "30 | ASM_Type_Return\n\nreturn" [shape=box];
  "28 | ASM_Return\n\n" -> "31 | ASM_Value\nIDENTIFIER\nb" [label=" R "];
  "31 | ASM_Value\nIDENTIFIER\nb" [shape=box];
  "57 | ASM_Assignment" -> "27 | \n\n"[shape=box];
  "27 | \n\n" [shape=box];
  "27 | \n\n" -> "32 | ASM_Write\n\n" [label=" R "];
  "32 | ASM_Write\n\n" [shape=box];
  "32 | ASM_Write\n\n" -> "33 | ASM_Ident\n\nb" [label=" L "];
  "33 | ASM_Ident\n\nb" [shape=box];
  "32 | ASM_Write\n\n" -> "34 | TIMES\n\n" [label=" R "];
  "34 | TIMES\n\n" [shape=box];
  "34 | TIMES\n\n" -> "35 | ASM_Value\nIDENTIFIER\nb" [label=" L "];
  "35 | ASM_Value\nIDENTIFIER\nb" [shape=box];
  "34 | TIMES\n\n" -> "36 | ASM_Value\nIDENTIFIER\na" [label=" R "];
  "36 | ASM_Value\nIDENTIFIER\na" [shape=box];
  "15 | ASM_Var" -> "37 | ASM_INIT\n\n"[shape=box];
  "37 | ASM_INIT\n\n" [shape=box];
  "37 | ASM_INIT\n\n" -> "40 | ASM_Type\n\nint" [label=" L "];
  "40 | ASM_Type\n\nint" [shape=box];
  "37 | ASM_INIT\n\n" -> "41 | ASM_Write\n\n" [label=" R "];
  "41 | ASM_Write\n\n" [shape=box];
  "41 | ASM_Write\n\n" -> "42 | ASM_Ident\n\nb" [label=" L "];
  "42 | ASM_Ident\n\nb" [shape=box];
  "41 | ASM_Write\n\n" -> "43 | ASM_PopStack\n\n" [label=" R "];
  "43 | ASM_PopStack\n\n" [shape=box];
  "58 | ASM_Var_CALL" -> "26 | ASM_CALL_Func\n\n"[shape=box];
  "26 | ASM_CALL_Func\n\n" [shape=box];
  "26 | ASM_CALL_Func\n\n" -> "38 | ASM_FuncName\n\nfactorial" [label=" L "];
  "38 | ASM_FuncName\n\nfactorial" [shape=box];
  "26 | ASM_CALL_Func\n\n" -> "39 | ASM_Arg\nIDENTIFIER\nx" [label=" R "];
  "39 | ASM_Arg\nIDENTIFIER\nx" [shape=box];
  "59 | ASM_Var" -> "25 | ASM_INIT\n\n"[shape=box];
  "25 | ASM_INIT\n\n" [shape=box];
  "25 | ASM_INIT\n\n" -> "44 | ASM_Type\n\nint" [label=" L "];
  "44 | ASM_Type\n\nint" [shape=box];
  "25 | ASM_INIT\n\n" -> "45 | ASM_Write\n\n" [label=" R "];
  "45 | ASM_Write\n\n" [shape=box];
  "45 | ASM_Write\n\n" -> "46 | ASM_Ident\n\nx" [label=" L "];
  "46 | ASM_Ident\n\nx" [shape=box];
  "45 | ASM_Write\n\n" -> "47 | MINUS\n\n" [label=" R "];
  "47 | MINUS\n\n" [shape=box];
  "47 | MINUS\n\n" -> "48 | ASM_Value\nIDENTIFIER\na" [label=" L "];
  "48 | ASM_Value\nIDENTIFIER\na" [shape=box];
  "47 | MINUS\n\n" -> "49 | ASM_Value\nINT\n1" [label=" R "];
  "49 | ASM_Value\nINT\n1" [shape=box];
  "25 | ASM_Return" -> "51 | ASM_Return\n\n"[shape=box];
  "51 | ASM_Return\n\n" [shape=box];
  "51 | ASM_Return\n\n" -> "52 | ASM_Type_Return\n\nreturn" [label=" L "];
  "52 | ASM_Type_Return\n\nreturn" [shape=box];
  "51 | ASM_Return\n\n" -> "53 | ASM_Value\nIDENTIFIER\na" [label=" R "];
  "53 | ASM_Value\nIDENTIFIER\na" [shape=box];
  "60 | ASM_If" -> "16 | ASM_END_If" [label=" R "];
  "60 | ASM_If" -> "24 | EQUAL\n\n"[shape=box];
  "24 | EQUAL\n\n" [shape=box];
  "24 | EQUAL\n\n" -> "54 | ASM_Value\nIDENTIFIER\na" [label=" L "];
  "54 | ASM_Value\nIDENTIFIER\na" [shape=box];
  "24 | EQUAL\n\n" -> "55 | ASM_Value\nINT\n1" [label=" R "];
  "55 | ASM_Value\nINT\n1" [shape=box];
  "18 | ASM_funcSignature" -> "56 | ASM_Func\n\n"[shape=box];
  "56 | ASM_Func\n\n" [shape=box];
  "56 | ASM_Func\n\n" -> "57 | ASM_FuncDef\n\n" [label=" L "];
  "57 | ASM_FuncDef\n\n" [shape=box];
  "57 | ASM_FuncDef\n\n" -> "58 | ASM_Value\n\nint" [label=" L "];
  "58 | ASM_Value\n\nint" [shape=box];
  "57 | ASM_FuncDef\n\n" -> "59 | ASM_Ident\n\nfactorial" [label=" R "];
  "59 | ASM_Ident\n\nfactorial" [shape=box];
  "56 | ASM_Func\n\n" -> "60 | ASM_ArgDef\n\n" [label=" R "];
  "60 | ASM_ArgDef\n\n" [shape=box];
  "60 | ASM_ArgDef\n\n" -> "61 | ASM_Value\nTYPEDEF\nint" [label=" L "];
  "61 | ASM_Value\nTYPEDEF\nint" [shape=box];
  "60 | ASM_ArgDef\n\n" -> "62 | ASM_Value\nIDENTIFIER\na" [label=" R "];
  "62 | ASM_Value\nIDENTIFIER\na" [shape=box];
}
